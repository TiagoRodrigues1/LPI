definitions:
  model.Claims:
    properties:
      username:
        type: string
    type: object
  model.Users:
    properties:
      password:
        type: string
      email:
        type: string
    type: object
  model.Animal:
    properties:
      name:
        type: string
      userID:
        type: integer
      race:
        type: string
      animaltype:
        type: string
    type: object
  model.Question:
   properties:
    question:
        type: string
    userID:
        type: integer
    type: object
  model.Appointment:
    properties:
      day:
        type: integer
      month: 
        type: integer
      year:
        type: integer
      hour:
        type: integer
      minutes:
        type: integer
      showedUp:
        type: boolean
      animalID:
        type: integer
      vetID:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica o utilizador e gera o token para os próximos acessos
      parameters:
      - description: Do login
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/model.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claims'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Realizar autenticação
  /auth/refresh_token:
    put:
      consumes:
      - application/json
      description: Atualiza o token de autenticação do usuário
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claims'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Atualiza token de autenticação
  /auth/register:
    post:
      consumes:
      - application/json
      description: Regista um utilizador
      parameters:
      - description: Do register
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/model.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Claims'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
      summary: Realizar registro
  /echo:
    get:
      consumes:
      - application/json
      description: Echo the data sent though the get request.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Evaluation'
            type: array
        "404":
          description: Not found
      summary: Echo the data sent on get
  /evaluation:
    get:
      consumes:
      - application/json
      description: Exibe a lista, sem todos os campos, de todas as avaliações
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Evaluation'
            type: array
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Recupera as avaliações
    post:
      consumes:
      - application/json
      description: Cria uma avaliação sobre a utilização da aplicação
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add evaluation
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/model.Evaluation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Evaluation'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Adicionar uma avaliação
  /animal:
        post:
      consumes:
      - application/json
      description: Create Animal
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Animal
        in: body
        name: animal
        required: true
        schema:
          $ref: '#/definitions/model.Animal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Animal'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Create Animal
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Exibe os detalhes de um usuario pelo ID
      operationId: get-user-by-int
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Users'
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Recupera um Usuario pelo id
    put:
      consumes:
      - application/json
      description: Atualiza um Usuario sobre a utilização da aplicação
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Udpdate User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Users'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Users'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Atualiza um Usuario
    /question:
        post:
      consumes:
      - application/json
      description: Create Question
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Question
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model.Question'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Question'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Create Question
    /appointment:
      post:
      consumes:
      - application/json
      description: Create Appointment
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create Appointment
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/model.Appointment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Appointment'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Create Appointment
    /appointment/{id}:
      put:
        consumes:
      - application/json
      description: Atualiza um Appointment sobre a utilização da aplicação
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Udpdate Appointment
        in: body
        name: appointment
        required: true
        schema:
          $ref: '#/definitions/model.Appointment'
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Appointment'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Atualiza um Appointment
      /animal/{id}:
    get:
      consumes:
      - application/json
      description: Exibe os detalhes de um Animal pelo ID
      operationId: get-animal-by-int
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Animal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Animal'
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Recupera um Animal pelo id
    put:
      consumes:
      - application/json
      description: Atualiza um Animal sobre a utilização da aplicação
      parameters:
      - description: Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Udpdate Animal
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Animal'
      - description: Animal ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Animal'
        "400":
          description: Bad request
        "404":
          description: Not found
      security:
      - BearerAuth: []
      summary: Atualiza um Animal
swagger: "2.0"
