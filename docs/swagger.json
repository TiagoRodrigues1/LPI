{
"swagger": "2.0",
"info": {
    "description": "{{.Description}}",
    "title": "{{API LPI}}",
    "contact": {},
    "version": "{{.Version}}"
},
"host": "{{.Host}}",
"basePath": "{{.BasePath}}",
"paths": {
    "/auth/login": {
        "post": {
            "description": "Autentica o utilizador e gera o token para os próximos acessos",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Realizar autenticação",
            "parameters": [
                {
                    "description": "Do login",
                    "name": "evaluation",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Users"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Claims"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "401": {
                    "description": "Unauthorized"
                }
            }
        }
    },
    "/auth/refresh_token": {
        "put": {
            "description": "Atualiza o token de autenticação do usuário",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Atualiza token de autenticação",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Claims"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "401": {
                    "description": "Unauthorized"
                }
            }
        }
    },
    "/auth/register": {
        "post": {
            "description": "Regista um utilizador",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Realizar registro",
            "parameters": [
                {
                    "description": "Do register",
                    "name": "evaluation",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Users"
                    }
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Claims"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "401": {
                    "description": "Unauthorized"
                }
            }
        }
    },
    "/animal": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Cria um animal",
            "consumes": [
                "multipart/form-data"
               
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Create Animal",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "in": "formData",
                    "name": "picture",
                    "type": "file",
                    "description": "The file to upload." 
                },
                {
                    "description": "Create Animal",
                    "name": "animal",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/animal/{id}": {
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui um animal",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui um animal pelo ID",
            "operationId": "delete-animal",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Animal ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe os detalhes do Animal de dado ID",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Recupera um Animal pelo id",
            "operationId": "get-animal-by-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Animal ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "put": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Atualiza um animal sobre a utilização da aplicação",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Atualiza um Animal",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Update Animal",
                    "name": "animal",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                {
                    "type": "integer",
                    "description": "Animal ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/user/{id}": {
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe o perfil do Usuario de dado ID",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Recupera um Usuario pelo id",
            "operationId": "get-user-by-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "User ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Users"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "put": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Atualiza um usuario sobre a utilização da aplicação",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Atualiza um Usuario",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Update User",
                    "name": "user",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Users"
                    }
                },
                {
                    "type": "integer",
                    "description": "User ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Users"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/userAnimals/{id}": {
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibir oa animais do Usuario de dado ID",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Recupera os Animais pelo id do Usuario",
            "operationId": "get-animals-by-user-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "User ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Animal"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/question": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Creates a Question",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Create Question",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Create Question",
                    "name": "question",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Question"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/question/{id}": {
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui uma pergunta",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui uma pergunta pelo ID",
            "operationId": "delete-question",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Pergunta ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Question"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/answer": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Adds a answer",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Adds a awnser",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Adds a awnser",
                    "name": "question",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Answer"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/answer/{id}": {
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui uma resposta",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui uma resposta pelo ID",
            "operationId": "delete-answer",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Resposta ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe as repostas de uma pergunta",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exibe as repostas de uma pergunta",
            "operationId": "get-answners-by-question-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID da pergunta",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        } 
    },
    "/vaccine": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Adiciona uma vacina",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Adds a awnser",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Adiciona uma vacina",
                    "name": "vacina",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/vaccine/{id}": {
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui uma vacina",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui uma vacina pelo ID",
            "operationId": "delete-vaccine",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID vacina",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe as vacinas de um animal",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exibe as vacinas de um animal",
            "operationId": "get-vaccines-by-animal-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID do animal",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Vaccine"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        } 
    },
    "/clinic": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Adds a clinic",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Adds a clinic",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Adds a clinic",
                    "name": "question",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Clinic"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Clinic"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe as clinicas ordenadas por id",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exibe as clinicas ordenadas por id",
            "operationId": "get-adoptions-by-time-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Clinic"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
     
    },
    "/clinic/{id}": {
      
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui uma clinica",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui uma resposta pelo ID",
            "operationId": "delete-answer",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Resposta ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Answer"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
     
    },
    "/clinic/{id}/{UserID}": {
        "put": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Adiciona um veterinario à clinica",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Adiciona um veterinario a uma clinica",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID da clinica",
                    "name": "id",
                    "in": "path",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID do user",
                    "name": "UserID",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.VetClinic"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/clinicRem/{UserID}": {
        "put": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Remove um veterinario a uma clinica",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Remove um veterinario a uma clinica",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "ID do user",
                    "name": "UserID",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.VetClinic"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/adoption": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Creates a adoption",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Adds a adoption",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Adds a adoption",
                    "name": "question",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Adoption"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Adoption"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/adoption/{id}": {
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe as adoções criadas por um user",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exibe as adoções criadas por um user",
            "operationId": "get-adoptions-by-user-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "UserID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Adoption"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        },
        "delete": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exclui uma adoçao",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exclui uma adoçao pelo ID",
            "operationId": "delete-adoption",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "type": "integer",
                    "description": "Adoption ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Adoption"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/adoptionByTime": {
        "get": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Exibe as adoções ordenadas por data",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Exibe as adoções ordenadas por data",
            "operationId": "get-adoptions-by-time-int",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Adoption"
                    }
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/appointment": {
        "post": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Creates a Appointment",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Create Appointment",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Create Appointment",
                    "name": "appointment",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Appointment"
                    }
                }
            ],
            "responses": {
                "201": {
                    "description": "Created",
                    "schema": {
                        "$ref": "#/definitions/model.Appointment"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    },
    "/appointment/{id}": {
        "put": {
            "security": [
                {
                    "BearerAuth": []
                }
            ],
            "description": "Atualiza um Appointment sobre a utilização da aplicação",
            "consumes": [
                "application/json"
            ],
            "produces": [
                "application/json"
            ],
            "summary": "Atualiza um Appointment",
            "parameters": [
                {
                    "type": "string",
                    "description": "Token",
                    "name": "Authorization",
                    "in": "header",
                    "required": true
                },
                {
                    "description": "Udpdate User",
                    "name": "appointment",
                    "in": "body",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/model.Appointment"
                    }
                },
                {
                    "type": "integer",
                    "description": "Appointment ID",
                    "name": "id",
                    "in": "path",
                    "required": true
                }
            ],
            "responses": {
                "200": {
                    "description": "OK",
                    "schema": {
                        "$ref": "#/definitions/model.Appointment"
                    }
                },
                "400": {
                    "description": "Bad request"
                },
                "404": {
                    "description": "Not found"
                }
            }
        }
    }
},
"definitions": {
    "model.Claims": {
        "type": "object",
        "properties": {
            "username": {
                "type": "string"
            }
        }
    },
    "model.Users": {
        "type": "object",
        "properties": {
            "password": {
                "type": "string"
            },
            "email": {
                "type": "string"
            }
        }
    },
    "model.Animal": {
        "type": "object",
        "properties": {
            "name": {
                "type": "string"
            },
            "userID" : {
                "type": "integer"
            },
            "race": {
                "type": "string"
            },
            "animaltype": {
                "type": "string"
            }
        }
    },
    "model.Question": {
        "type": "object",
        "properties": {
            "question": {
                "type": "string"
            },
            "userID": {
                "type": "integer"
            }
        }
    },
    "model.Answer": {
        "type": "object",
        "properties": {
            "answer": {
                "type": "string"
            },
            "userID": {
                "type": "integer"
            },
            "questionID": {
                "type": "integer"
            }
        }
    },
    "model.Vaccine": {
        "type": "object",
        "properties": {
            "vacineName": {
                "type": "string"
            },
            "AnimalID": {
                "type": "integer"
            }
        }
    },
    "model.Adoption": {
        "type": "object",
        "properties": {
            "name": {
                "type": "string"
            },
            "animaltype": {
                "type": "string"
            },
            "race": {
                "type": "string"
            },
            "userID" : {
                "type": "integer"
            },
            "text": {
                "type": "string"
            },
            "adopted": {
                "type":"boolean" 
                
            }
        }
    },
    "model.VetClinic": {
        "type": "object",
        "properties": {
            "userID": {
                "type": "integer"
            }
        }
    },
    "model.Clinic": {
        "type": "object",
        "properties": {
            "UserID" : {
                "type": "integer"
            },
            "name": {
                "type": "string"
            },
            "contact": {
                "type": "string"
            },
            "email": {
                "type": "string"
            },
            "address": {
                "type": "string"
            },
            "latitude": {
                "type": "string"
            }, 
            "longitude": {
                "type": "string"
            }
        }
    },
    "model.Appointment": {
        "type": "object",
        "properties": {
            "day": {
                "type":"integer"
            },
            "month": {
                "type":"integer" 
            },
            "year": {
                "type":"integer" 
            },
            "hour": {
                "type":"integer" 
            },
            "minutes": {
                "type":"integer" 
            },
            "showedUp": {
                "type":"boolean" 
            },
            "vetID": {
                "type":"integer" 
            },
            "animalID": {
                "type":"integer" 
            }
        }
    }
}
}
